{"ast":null,"code":"import './App.css';\nimport React, { Component } from 'react';\nimport NewForm from './NewForm';\nimport Nav from './Nav';\nlet baseUrl = \"http://localhost:8000/api/v1/\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getPosts = () => {\n      fetch(baseUrl + \"/home/\", {// credentials:\"include\"\n      }).then(res => {\n        // eslint-disable-next-line no-cond-assign\n        if (res.status = 200) {\n          return res.json;\n        } else {\n          return [];\n        }\n      });\n    };\n\n    this.state = {\n      posts: [],\n      modalOpen: false,\n      postsToBeEdited: {},\n      text: \"\",\n      user: \"\",\n      userLoggedIn: false\n    };\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/boris/sei-bromeliad/projects/project4/Project-4-Frontend/src/App.js"],"names":["React","Component","NewForm","Nav","baseUrl","App","constructor","props","getPosts","fetch","then","res","status","json","state","posts","modalOpen","postsToBeEdited","text","user","userLoggedIn"],"mappings":"AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AAEA,IAAIC,OAAO,GAAG,+BAAd;;AAEA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAC1BK,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SAalBC,QAbkB,GAaP,MAAM;AACfC,MAAAA,KAAK,CAACL,OAAO,GAAG,QAAX,EAAoB,CACvB;AADuB,OAApB,CAAL,CAGCM,IAHD,CAGMC,GAAG,IAAI;AACX;AACA,YAAGA,GAAG,CAACC,MAAJ,GAAW,GAAd,EAAkB;AAChB,iBAAOD,GAAG,CAACE,IAAX;AACD,SAFD,MAEO;AACL,iBAAO,EAAP;AACD;AACF,OAVD;AAWD,KAzBiB;;AAGhB,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAC,EADK;AAEXC,MAAAA,SAAS,EAAE,KAFA;AAGXC,MAAAA,eAAe,EAAC,EAHL;AAIXC,MAAAA,IAAI,EAAC,EAJM;AAKXC,MAAAA,IAAI,EAAC,EALM;AAMXC,MAAAA,YAAY,EAAE;AANH,KAAb;AAQD;;AAZyB;;AA+B5B,eAAef,GAAf","sourcesContent":["import './App.css';\nimport React, { Component } from 'react'\nimport NewForm from './NewForm'\nimport Nav from './Nav'\n\nlet baseUrl = \"http://localhost:8000/api/v1/\"\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n\n    this.state = {\n      posts:[],\n      modalOpen: false,\n      postsToBeEdited:{},\n      text:\"\",\n      user:\"\",\n      userLoggedIn: false \n    }\n  }\n\n  getPosts = () => {\n    fetch(baseUrl + \"/home/\",{\n      // credentials:\"include\"\n    })\n    .then(res => {\n      // eslint-disable-next-line no-cond-assign\n      if(res.status=200){\n        return res.json\n      } else {\n        return []\n      }\n    })\n  }\n\n  add\n\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}