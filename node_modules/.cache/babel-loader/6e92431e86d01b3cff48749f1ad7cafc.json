{"ast":null,"code":"var _jsxFileName = \"/Users/boris/sei-bromeliad/projects/project4/Project-4-Frontend/src/App.js\";\nimport './App.css';\nimport React, { Component } from 'react';\nimport NewForm from './NewForm';\nimport Nav from './Nav';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet baseUrl = \"http://localhost:8000/api/v1/\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getPosts = () => {\n      fetch(baseUrl + \"/home/\", {// credentials:\"include\"\n      }).then(res => {\n        if (res.status === 200) {\n          return res.json;\n        } else {\n          return [];\n        }\n      }).then(data => {\n        console.log(data);\n        this.st;\n      });\n    };\n\n    this.createPost = newPost => {\n      const copyPosts = [...this.state.posts];\n      copyPosts.push(newPost);\n      this.setState({\n        posts: copyPosts\n      });\n    };\n\n    this.loginUser = async e => {\n      e.preventDefault();\n      const url = baseUrl + '/user/login';\n      const loginBody = {\n        username: e.target.username.value,\n        password: e.target.password.value\n      };\n\n      try {\n        const response = await fetch(url, {\n          method: 'POST',\n          body: JSON.stringify(loginBody),\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          credentials: \"include\"\n        });\n        console.log(response);\n        console.log(\"BODY: \", response.body);\n\n        if (response.status === 200) {\n          this.getPosts();\n        }\n      } catch (err) {\n        console.log('Error => ', err);\n      }\n    };\n\n    this.register = async e => {\n      e.preventDefault();\n      const url = baseUrl + '/user/register';\n\n      try {\n        const response = await fetch(url, {\n          method: 'POST',\n          body: JSON.stringify({\n            username: e.target.username.value,\n            password: e.target.password.value,\n            email: e.target.email.value\n          }),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n\n        if (response.status === 200) {\n          this.getPosts();\n        }\n      } catch (err) {\n        console.log('Error => ', err);\n      }\n    };\n\n    this.deletePost = id => {\n      fetch(baseUrl + '/home/' + id, {\n        method: 'DELETE' // credentials: \"include\"\n\n      }).then(res => {\n        const findIndex = this.state.posts.findIndex(post => post._id === id);\n        const copyPosts = [...this.state.posts];\n        copyPosts.splice(findIndex, 1);\n        this.setState({\n          posts: copyPosts\n        });\n      });\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const url = baseUrl + '/home/' + this.state.postsToBeEdited._id;\n\n      try {\n        const response = await fetch(url, {\n          method: 'PUT',\n          body: JSON.stringify({\n            text: e.target.text.value,\n            user: e.target.user.value\n          }),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n\n        if (response.status === 200) {\n          const updatedPost = await response.json();\n          const findIndex = this.state.posts.findIndex(post => post._id === updatedPost._id);\n          const copyPosts = [...this.state.posts];\n          copyPosts[findIndex] = updatedPost;\n          this.setState({\n            posts: copyPosts,\n            modalOpen: false\n          });\n        }\n      } catch (err) {\n        console.log('Error => ', err);\n      }\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.showEditForm = post => {\n      this.setState({\n        modalOpen: true,\n        text: post.text,\n        postToBeEdited: post\n      });\n    };\n\n    this.state = {\n      posts: [],\n      modalOpen: false,\n      postsToBeEdited: {},\n      text: \"\",\n      user: \"\",\n      userLoggedIn: false\n    };\n  }\n\n  componentDidMount() {\n    this.getPosts();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Hello World!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.state.posts.map((post, i) => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: post.user\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", post.text, \" \"]\n              }, i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                onClick: () => {\n                  this.showEditForm(post);\n                },\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                onClick: () => this.deletePost(post._id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 21\n              }, this)]\n            }, post._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), this.state.modalOpen && /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Text: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"description\",\n          value: this.state.text,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/boris/sei-bromeliad/projects/project4/Project-4-Frontend/src/App.js"],"names":["React","Component","NewForm","Nav","baseUrl","App","constructor","props","getPosts","fetch","then","res","status","json","data","console","log","st","createPost","newPost","copyPosts","state","posts","push","setState","loginUser","e","preventDefault","url","loginBody","username","target","value","password","response","method","body","JSON","stringify","headers","credentials","err","register","email","deletePost","id","findIndex","post","_id","splice","handleSubmit","postsToBeEdited","text","user","updatedPost","modalOpen","handleChange","name","showEditForm","postToBeEdited","userLoggedIn","componentDidMount","render","map","i"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, { Component } from 'react'\nimport NewForm from './NewForm'\nimport Nav from './Nav'\n\nlet baseUrl = \"http://localhost:8000/api/v1/\"\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n\n    this.state = {\n      posts:[],\n      modalOpen: false,\n      postsToBeEdited:{},\n      text:\"\",\n      user:\"\",\n      userLoggedIn: false \n    }\n  }\n\n  getPosts = () => {\n    fetch(baseUrl + \"/home/\",{\n      // credentials:\"include\"\n    })\n    .then(res => {\n      if(res.status === 200){\n        return res.json\n      } else {\n        return []\n      }\n    }).then(data => {\n      console.log(data)\n      this.st\n    })\n  }\n\n  createPost = (newPost) => {\n    const copyPosts = [...this.state.posts]\n    copyPosts.push(newPost)\n    this.setState({\n      posts:copyPosts\n    })\n  }\n\n  loginUser = async (e) => {\n    e.preventDefault()\n    const url = baseUrl + '/user/login'\n    const loginBody = {\n      username: e.target.username.value,\n      password: e.target.password.value\n    }\n    try {\n\n      const response = await fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(loginBody),\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: \"include\"\n      })\n\n      console.log(response)\n      console.log(\"BODY: \",response.body)\n\n      if (response.status === 200) {\n        this.getPosts()\n      }\n    }\n    catch (err) {\n      console.log('Error => ', err);\n    }\n  }\n\n  register = async (e) => {\n    e.preventDefault()\n    const url = baseUrl + '/user/register'\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        body: JSON.stringify({\n          username: e.target.username.value,\n          password: e.target.password.value,\n          email: e.target.email.value\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n      if (response.status === 200) {\n        this.getPosts()\n      }\n    }\n    catch (err) {\n      console.log('Error => ', err);\n    }\n  }\n\n  deletePost = (id) => {\n    fetch(baseUrl + '/home/' + id, {\n    method: 'DELETE',\n    // credentials: \"include\"\n  }).then( res => {\n    const findIndex = this.state.posts.findIndex(post => post._id === id)\n    const copyPosts = [...this.state.posts]\n    copyPosts.splice(findIndex, 1)\n    this.setState({\n      posts: copyPosts\n    })\n  })\n  }\n\n  handleSubmit = async (e) => {\n    e.preventDefault()\n    const url = baseUrl + '/home/' + this.state.postsToBeEdited._id\n    try{\n      const response = await fetch( url , {\n        method: 'PUT',\n        body: JSON.stringify({\n          text: e.target.text.value,\n          user: e.target.user.value\n        }),\n        headers: {\n          'Content-Type' : 'application/json'\n        }\n      })\n\n      if (response.status === 200){\n        const updatedPost = await response.json()\n        const findIndex = this.state.posts.findIndex(post => post._id === updatedPost._id)\n        const copyPosts = [...this.state.posts]\n        copyPosts[findIndex] = updatedPost\n        this.setState({\n          posts: copyPosts,\n          modalOpen:false\n        })\n      }\n    }\n    catch(err){\n      console.log('Error => ', err);\n    }\n  }\n\n  handleChange = (e)=>{\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  showEditForm = (post)=>{\n    this.setState({\n      modalOpen:true,\n      text: post.text,\n      postToBeEdited:post\n    })\n  }\n\n  componentDidMount() {\n    this.getPosts()\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {/* <Nav loginUser={this.loginUser} register={this.register}/> */}\n        <h1>Hello World!</h1>\n        {/* <NewForm baseUrl={baseUrl} addPost={ this.addPost }/> */}\n        <table>\n          <tbody>\n            { this.state.posts.map((post, i) => {\n                return (\n                  <tr key={post._id}>\n                    <td>\n                     { post.user }\n                    </td>\n                    <td key={i}> {post.text} </td>\n                    <td onClick={() => { this.showEditForm(post)}}>Edit</td>\n                    <td onClick={() => this.deletePost(post._id)}>Delete</td>\n                  </tr>\n                )\n              })\n            }\n          </tbody>\n        </table>\n        <br/>\n          {\n            this.state.modalOpen &&\n\n            <form onSubmit={this.handleSubmit}>\n              <label>Text: </label>\n              <input name=\"description\" value={this.state.text} onChange={this.handleChange}/>\n              <button>Submit</button>\n            </form>\n          }\n      </div>\n    );\n  }\n\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}