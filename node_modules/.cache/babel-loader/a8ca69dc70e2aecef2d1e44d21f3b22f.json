{"ast":null,"code":"var _jsxFileName = \"/Users/boris/sei-bromeliad/projects/project4/Project-4-Frontend/src/App.js\";\nimport './App.css';\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet baseUrl = \"http://localhost:8000\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.checkLoginStatus = () => {\n      fetch(baseUrl + \"/user/logged_is_user\", {\n        credentials: \"include\"\n      }).then(res => {\n        console.log(res);\n\n        if (res.status === 200) {\n          res.json().then(body => {\n            console.log(body);\n            console.log(body.data);\n            this.setState({\n              user: body.data,\n              userLoggedIn: true\n            });\n            this.getPosts();\n            return res;\n          });\n        } else {\n          console.log(\"Nobody is logged in\");\n          this.setState({\n            userLoggedIn: false\n          });\n        }\n      }).catch(error => {\n        console.log(\"check login error\", error);\n      });\n    };\n\n    this.getPosts = () => {\n      fetch(baseUrl + \"/\", {// credentials:\"include\"\n      }).then(res => {\n        if (res.status === 200) {\n          return res.json();\n        } else {\n          return [];\n        }\n      }).then(data => {\n        console.log(data);\n        this.setState({\n          posts: data[\"data\"]\n        });\n      });\n    };\n\n    this.getMyPosts = () => {\n      fetch(baseUrl + \"/my_posts\", {\n        credentials: \"include\"\n      }).then(res => {\n        if (res.status === 200) {\n          return res.json();\n        } else {\n          return [];\n        }\n      }).then(data => {\n        this.setState({\n          posts: data[\"data\"]\n        });\n      });\n    };\n\n    this.getNews = () => {\n      fetch(\"http://newsapi.org/v2/everything?q=ai&apiKey=061f7b5de4d040b3a441ee17a36b3d0d\", {}).then(res => {\n        if (res.status === 200) {\n          return res.json();\n        } else {\n          return [];\n        }\n      }).then(data => {\n        console.log(data[\"articles\"]);\n        this.setState({\n          articles: data[\"articles\"]\n        });\n      });\n    };\n\n    this.createPost = newPost => {\n      const copyPosts = [...this.state.posts];\n      copyPosts.push(newPost);\n      this.setState({\n        posts: copyPosts\n      });\n    };\n\n    this.loginUser = async e => {\n      e.preventDefault();\n      const url = baseUrl + '/user/login';\n      const loginBody = {\n        email: e.target.email.value,\n        password: e.target.password.value\n      };\n      console.log(loginBody);\n\n      try {\n        const response = await fetch(url, {\n          method: 'POST',\n          body: JSON.stringify(loginBody),\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          credentials: \"include\"\n        });\n        console.log(response);\n        console.log(\"BODY: \", response.body);\n\n        if (response.status === 200) {\n          this.checkLoginStatus();\n          this.getPosts();\n          this.setState({\n            userLoginOpen: false\n          });\n          console.log(this.state);\n        }\n      } catch (err) {\n        console.log('Error => ', err);\n      }\n    };\n\n    this.handleSubmitPost = async event => {\n      event.preventDefault();\n      const postBody = {\n        text: event.target.text.value,\n        user: this.state.user\n      };\n      console.log(postBody);\n\n      try {\n        const res = await fetch(baseUrl, {\n          method: \"POST\",\n          body: JSON.stringify(postBody),\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          credentials: \"include\"\n        });\n\n        if (res.status === 200) {\n          const copyPosts = [...this.state.posts];\n          copyPosts.push(postBody);\n          this.setState({\n            posts: copyPosts\n          });\n        }\n      } catch (err) {\n        console.log('Error => ', err);\n      }\n    };\n\n    this.register = async e => {\n      e.preventDefault();\n      const url = baseUrl + '/user/register';\n\n      try {\n        const response = await fetch(url, {\n          method: 'POST',\n          body: JSON.stringify({\n            username: e.target.username.value,\n            password: e.target.password.value,\n            email: e.target.email.value\n          }),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n\n        if (response.status === 200) {\n          this.getPosts();\n        }\n      } catch (err) {\n        console.log('Error => ', err);\n      }\n    };\n\n    this.logoutUser = () => {\n      fetch(`${baseUrl}/user/logout`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include'\n      }).then(response => {\n        console.log('Logout successful!');\n        this.setState({\n          userLoggedIn: false\n        });\n      });\n    };\n\n    this.deletePost = id => {\n      fetch(baseUrl + `/` + id, {\n        method: 'DELETE' // credentials: \"include\"\n\n      }).then(res => {\n        const findIndex = this.state.posts.findIndex(post => post[\"id\"] === id);\n        console.log(findIndex);\n        const copyPosts = [...this.state.posts];\n        copyPosts.splice(findIndex, 1);\n        this.setState({\n          posts: copyPosts\n        });\n      });\n    };\n\n    this.showEditForm = post => {\n      this.setState({\n        modalOpen: true,\n        text: post.text,\n        postToBeEdited: post\n      });\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const url = baseUrl + '/' + this.state.postToBeEdited[\"id\"];\n\n      try {\n        const response = await fetch(url, {\n          method: 'PUT',\n          body: JSON.stringify({\n            text: e.target.text.value\n          }),\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          credentials: 'include'\n        });\n\n        if (response.status === 200) {\n          const updatedPost = await response.json();\n          const findIndex = this.state.posts.findIndex(post => post[\"id\"] === updatedPost[\"id\"]);\n          const copyPosts = [...this.state.posts];\n          copyPosts[findIndex] = updatedPost;\n          this.setState({\n            posts: copyPosts,\n            modalOpen: false\n          });\n        }\n      } catch (err) {\n        console.log('Error => ', err);\n      }\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.showLoginForm = () => {\n      this.setState({\n        userLoginOpen: true\n      });\n    };\n\n    this.closeLoginForm = () => {\n      this.setState({\n        userLoginOpen: false\n      });\n    };\n\n    this.showRegisterForm = () => {\n      this.setState({\n        userRegisterOpen: true\n      });\n    };\n\n    this.closeRegisterForm = () => {\n      this.setState({\n        userRegisterOpen: false\n      });\n    };\n\n    this.state = {\n      posts: [],\n      modalOpen: false,\n      postToBeEdited: {},\n      text: \"\",\n      user: {},\n      userLoggedIn: false,\n      userLoginOpen: false,\n      userRegisterOpen: false,\n      articles: []\n    };\n  }\n\n  async componentDidMount() {\n    this.checkLoginStatus();\n    this.getPosts();\n    this.getNews();\n    this.getMyPosts();\n    console.log(this.state);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\" Hello \", this.state.user.username, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"option\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"My posts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 15\n        }, this), this.state.userLoggedIn === false && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"option\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            onClick: () => {\n              this.showLoginForm();\n            },\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 15\n        }, this), this.state.userLoggedIn === false && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"option\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            onClick: () => {\n              this.showRegisterForm();\n            },\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 15\n        }, this), this.state.userLoggedIn && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"option\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            onClick: () => {\n              this.logoutUser();\n            },\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 15\n        }, this), this.state.userLoginOpen && /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.loginUser,\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Login \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 42\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Email: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            autoComplete: \"off\",\n            type: \"text\",\n            id: \"name\",\n            name: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 81\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Password: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            autoComplete: \"off\",\n            type: \"text\",\n            id: \"password\",\n            name: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 88\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 56\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 17\n        }, this), this.state.userRegisterOpen && /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.register,\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Register \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 45\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Username: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            autoComplete: \"off\",\n            type: \"text\",\n            id: \"name\",\n            name: \"username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 86\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Password: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            autoComplete: \"off\",\n            type: \"text\",\n            id: \"password\",\n            name: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 90\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Email: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            autoComplete: \"off\",\n            type: \"text\",\n            id: \"email\",\n            name: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 84\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"signup\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 59\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 17\n        }, this), this.state.modalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: this.handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Text: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              autoComplete: \"off\",\n              name: \"text\",\n              type: \"text\",\n              value: this.state.text,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feed\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \" Home \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: this.handleSubmitPost,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"submit\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                autoComplete: \"off\",\n                type: \"text\",\n                name: \"text\",\n                onChange: e => this.handleChange(e),\n                value: this.state.text,\n                placeholder: \"What's up ...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button\",\n              type: \"submit\",\n              children: \"Post\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 15\n        }, this), this.state.posts.map((post, i) => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"postFeed\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"body\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"header\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text\",\n                    children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                      children: post.user.username\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 393,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 392,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"Description\",\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: post.text\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 398,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 397,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 391,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"footer\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    children: \"Comment\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 402,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    children: \"Like\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 403,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => {\n                      this.showEditForm(post);\n                    },\n                    children: \"Edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 404,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => {\n                      this.deletePost(post[\"id\"]);\n                    },\n                    className: \"delete\",\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 405,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 401,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 21\n              }, this)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 21\n            }, this)\n          }, void 0, false);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"news\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"news_container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"What's happening in the world\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 19\n          }, this), this.state.articles.map((article, i) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"article\",\n              children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                href: article.url,\n                children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: article.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 424,\n                  columnNumber: 43\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 424,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: article.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 425,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 19\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/boris/sei-bromeliad/projects/project4/Project-4-Frontend/src/App.js"],"names":["React","Component","baseUrl","App","constructor","props","checkLoginStatus","fetch","credentials","then","res","console","log","status","json","body","data","setState","user","userLoggedIn","getPosts","catch","error","posts","getMyPosts","getNews","articles","createPost","newPost","copyPosts","state","push","loginUser","e","preventDefault","url","loginBody","email","target","value","password","response","method","JSON","stringify","headers","userLoginOpen","err","handleSubmitPost","event","postBody","text","register","username","logoutUser","deletePost","id","findIndex","post","splice","showEditForm","modalOpen","postToBeEdited","handleSubmit","updatedPost","handleChange","name","showLoginForm","closeLoginForm","showRegisterForm","userRegisterOpen","closeRegisterForm","componentDidMount","render","map","i","article","title","description"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, { Component } from 'react'\n\nlet baseUrl = \"http://localhost:8000\"\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n\n    this.state = {\n      posts:[],\n      modalOpen: false,\n      postToBeEdited:{},\n      text:\"\",\n      user:{},\n      userLoggedIn: false,\n      userLoginOpen:false,\n      userRegisterOpen:false,\n      articles: []\n    }\n  }\n\n  checkLoginStatus = () => {\n    fetch(baseUrl+\"/user/logged_is_user\", {\n      credentials:\"include\"\n    })\n    .then(res => {\n      console.log(res)\n      if (res.status === 200){\n        res.json()\n        \n        .then(body => {\n          console.log(body)\n          console.log(body.data)\n          this.setState({\n            user: body.data,\n            userLoggedIn: true\n          })\n          this.getPosts()\n          return res\n        })\n      }\n      else {\n        console.log(\"Nobody is logged in\")\n        this.setState({\n          userLoggedIn:false\n        })\n      }\n  })\n  .catch(error => {\n    console.log(\"check login error\", error)\n  })\n  }\n\n  getPosts = () => {\n    fetch(baseUrl + \"/\",{\n      // credentials:\"include\"\n    })\n    .then(res => {\n      if(res.status === 200){\n        return res.json()\n      } else {\n        return []\n      }\n    }).then(data => {\n      console.log(data)\n      this.setState({posts:data[\"data\"]})\n    })\n  }\n\n  getMyPosts = () => {\n    fetch(baseUrl + \"/my_posts\",{\n      credentials:\"include\"\n    })\n    .then(res => {\n      if(res.status === 200){\n        return res.json()\n      } else {\n        return []\n      }\n    }).then(data => {\n      this.setState({posts:data[\"data\"]})\n    })\n  }\n\n  getNews = () => {\n    fetch(\"http://newsapi.org/v2/everything?q=ai&apiKey=061f7b5de4d040b3a441ee17a36b3d0d\", {\n    })\n    .then(res => {\n      if(res.status === 200){\n        return res.json()\n      } else {\n        return []\n      }\n    }).then(data => {\n      console.log(data[\"articles\"])\n      this.setState({articles:data[\"articles\"]})\n    })\n  }\n\n  createPost = (newPost) => {\n    const copyPosts = [...this.state.posts]\n    copyPosts.push(newPost)\n    this.setState({\n      posts:copyPosts\n    })\n  }\n\n  loginUser = async (e) => {\n    e.preventDefault()\n    const url = baseUrl + '/user/login'\n    const loginBody = {\n      email: e.target.email.value,\n      password: e.target.password.value\n    }\n    console.log(loginBody)\n    try {\n\n      const response = await fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(loginBody),\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: \"include\"\n      })\n\n      console.log(response)\n      console.log(\"BODY: \",response.body)\n\n      if (response.status === 200) {\n        this.checkLoginStatus()\n        this.getPosts()\n        this.setState({\n          userLoginOpen:false\n        })\n        console.log(this.state)\n      }\n    }\n    catch (err) {\n      console.log('Error => ', err);\n    }\n  }\n\n\n  handleSubmitPost = async (event) => {\n    event.preventDefault()\n    const postBody ={\n      text: event.target.text.value,\n      user: this.state.user\n    }\n    console.log(postBody)\n    try{\n      const res = await fetch(baseUrl,{\n        method:\"POST\",\n        body:JSON.stringify(postBody),\n        headers:{\n          'Content-Type': 'application/json'\n        },\n        credentials: \"include\"\n      })\n\n      if(res.status === 200) {\n        const copyPosts = [...this.state.posts]\n        copyPosts.push(postBody)\n        this.setState({\n          posts:copyPosts\n        })\n      }\n    }\n    catch(err) {\n      console.log('Error => ',err)\n    }\n  }\n\n  register = async (e) => {\n    e.preventDefault()\n    const url = baseUrl + '/user/register'\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        body: JSON.stringify({\n          username: e.target.username.value,\n          password: e.target.password.value,\n          email: e.target.email.value\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n      if (response.status === 200) {\n        this.getPosts()\n        \n      }\n    }\n    catch (err) {\n      console.log('Error => ', err);\n    }\n  }\n\n  logoutUser = () => {\n    fetch(`${baseUrl}/user/logout`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include'\n    })\n    .then (response => {\n      console.log('Logout successful!')\n      this.setState({\n        userLoggedIn: false\n      })\n    })\n  }\n\n\n  deletePost = (id) => {\n    fetch(baseUrl + `/` + id, {\n    method: 'DELETE',\n    // credentials: \"include\"\n  }).then( res => {\n    const findIndex = this.state.posts.findIndex(post => post[\"id\"] === id)\n    console.log(findIndex)\n    const copyPosts = [...this.state.posts]\n    copyPosts.splice(findIndex, 1)\n    this.setState({\n      posts: copyPosts\n    })\n  })\n  }\n\n\n  showEditForm = (post)=>{\n    this.setState({\n      modalOpen:true,\n      text: post.text,\n      postToBeEdited:post\n    })\n  }\n\n  handleSubmit = async (e) => {\n    e.preventDefault()\n    const url = baseUrl + '/' + this.state.postToBeEdited[\"id\"]\n    try{\n      const response = await fetch( url , {\n        method: 'PUT',\n        body: JSON.stringify({\n          text: e.target.text.value\n        }),\n        headers: {\n          'Content-Type' : 'application/json'\n        },\n        credentials: 'include'\n      })\n\n      if (response.status === 200){\n        const updatedPost = await response.json()\n        const findIndex = this.state.posts.findIndex(post => post[\"id\"] === updatedPost[\"id\"])\n        const copyPosts = [...this.state.posts]\n        copyPosts[findIndex] = updatedPost\n        this.setState({\n          posts: copyPosts,\n          modalOpen:false\n        })\n      }\n    }\n    catch(err){\n      console.log('Error => ', err);\n    }\n  }\n\n  handleChange = (e)=>{\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  async componentDidMount() {\n    this.checkLoginStatus()\n    this.getPosts()\n    this.getNews()\n    this.getMyPosts()\n    console.log(this.state)\n  }\n\n  showLoginForm = () => {\n    this.setState({\n      userLoginOpen:true\n    })\n  }\n\n  closeLoginForm = () => {\n    this.setState({\n      userLoginOpen:false\n    })\n  }\n\n  showRegisterForm = () => {\n    this.setState({\n      userRegisterOpen:true\n    })\n  }\n\n  closeRegisterForm = () => {\n    this.setState({\n      userRegisterOpen:false\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n          <div className=\"sidebar\">\n              <h2> Hello {this.state.user.username} </h2>\n              <div className=\"option\">\n                <h3>My posts</h3>\n              </div>\n              { this.state.userLoggedIn === false &&\n              <div className=\"option\">\n                <h3 onClick={() => { this.showLoginForm()}}>Login</h3>\n              </div>\n              }\n              { this.state.userLoggedIn === false &&\n              <div className=\"option\">\n                <h3 onClick={() => { this.showRegisterForm()}}>Register</h3>\n              </div>\n              }\n              { this.state.userLoggedIn && \n              <div className=\"option\">\n                <h3 onClick={() => { this.logoutUser()}}>Logout</h3>\n              </div>\n              }\n              {\n                this.state.userLoginOpen &&\n\n                <form onSubmit={this.loginUser}>\n                  <strong>Login </strong><br/>\n                  <label htmlFor=\"name\">Email: </label>\n                  <input autoComplete=\"off\" type=\"text\" id=\"name\" name=\"email\"/><br/>\n                  <label htmlFor=\"name\">Password: </label>\n                  <input autoComplete=\"off\" type=\"text\" id=\"password\" name=\"password\"/><br/>\n                  <input type=\"submit\" value=\"login\" /><br/>\n                </form>\n\n              }\n\n              {\n                this.state.userRegisterOpen &&\n                <form onSubmit={this.register}>\n                  <strong>Register </strong><br/>\n                    <label htmlFor=\"name\">Username: </label>\n                    <input autoComplete=\"off\" type=\"text\" id=\"name\" name=\"username\"/><br/>\n                    <label htmlFor=\"name\">Password: </label>\n                    <input autoComplete=\"off\" type=\"text\" id=\"password\" name=\"password\"/><br/>\n                    <label htmlFor=\"name\">Email: </label>\n                    <input autoComplete=\"off\" type=\"text\" id=\"email\" name=\"email\"/><br/>\n                    <input type=\"submit\" value=\"signup\" /><br/>\n                 </form>\n              }\n\n              {\n                this.state.modalOpen &&\n                  <div>\n                    <form onSubmit={this.handleSubmit}>\n                      <label>Text: </label>\n                      <input autoComplete=\"off\" name=\"text\" type=\"text\"  value={this.state.text} onChange={this.handleChange}/>\n                      <button>Submit</button>\n                    </form>\n                  </div>\n              }\n          </div>\n\n\n          <div className=\"feed\">\n            <h2> Home </h2>\n              <div className=\"post\">\n                <form onSubmit={this.handleSubmitPost}>\n                    <div className=\"submit\">\n                        <input autoComplete=\"off\" type=\"text\"  name=\"text\" onChange={ (e) => this.handleChange(e)} value={this.state.text} placeholder=\"What's up ...\" />\n                    </div>\n                    <button className=\"button\" type=\"submit\">\n                            Post\n                    </button>\n                </form>\n            </div>\n            { this.state.posts.map((post, i) => {\n                return (\n                  <><div className=\"postFeed\" key={i}>\n                    <div className=\"body\">\n                      <div className=\"header\">\n                        <div className=\"text\">\n                          <h3>\n                            {post.user.username}\n                          </h3>\n                        </div>\n                        <div className=\"Description\">\n                          <p>{post.text}</p>\n                        </div>\n                      </div>\n                      <div className=\"footer\">\n                        <button>Comment</button>\n                        <button>Like</button>\n                        <button onClick={() => { this.showEditForm(post); } }>Edit</button>\n                        <button onClick={() => { this.deletePost(post[\"id\"]); } }className=\"delete\">Delete</button>\n                      \n                      </div>\n                    </div>\n                  </div>\n                  </>\n                )\n              })\n            }\n            </div>\n\n            <div className=\"news\">\n\n              <div className=\"news_container\">\n                  <h2>What's happening in the world</h2>\n              \n              { this.state.articles.map((article, i) => {\n                return(\n                  <div className=\"article\">\n                    <a href={article.url}><h3>{article.title}</h3></a>\n                    <p>{article.description}</p>\n                  </div>\n                )\n              })\n              }\n              </div>\n            </div>\n\n      </div>\n    );\n  }\n\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}