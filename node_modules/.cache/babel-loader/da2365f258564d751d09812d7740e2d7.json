{"ast":null,"code":"var _jsxFileName = \"/Users/boris/sei-bromeliad/projects/project4/Project-4-Frontend/src/App.js\";\nimport './App.css';\nimport React, { Component } from 'react';\nimport NewForm from './NewForm';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet baseUrl = \"http://localhost:8000\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.checkLoginStatus = () => {\n      fetch(baseUrl + \"/user/logged_is_user\", {\n        credentials: \"include\"\n      }).then(res => {\n        console.log(res);\n\n        if (res.status === 200) {\n          res.json();\n          console.logI.then(body => {\n            this.setState({\n              user: body.user,\n              userLoggedIn: true\n            });\n          });\n        }\n      }).catch(error => {\n        console.log(\"check login error\", error);\n      });\n    };\n\n    this.getPosts = () => {\n      fetch(baseUrl + \"/\", {// credentials:\"include\"\n      }).then(res => {\n        if (res.status === 200) {\n          return res.json();\n        } else {\n          return [];\n        }\n      }).then(data => {\n        console.log(data);\n        this.setState({\n          posts: data[\"data\"]\n        });\n      });\n    };\n\n    this.createPost = newPost => {\n      const copyPosts = [...this.state.posts];\n      copyPosts.push(newPost);\n      this.setState({\n        posts: copyPosts\n      });\n    };\n\n    this.loginUser = async e => {\n      e.preventDefault();\n      const url = baseUrl + '/user/login';\n      const loginBody = {\n        email: e.target.email.value,\n        password: e.target.password.value\n      };\n      console.log(loginBody);\n\n      try {\n        const response = await fetch(url, {\n          method: 'POST',\n          body: JSON.stringify(loginBody),\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          credentials: \"include\"\n        });\n        console.log(response);\n        console.log(\"BODY: \", response.body);\n\n        if (response.status === 200) {\n          this.getPosts();\n        }\n      } catch (err) {\n        console.log('Error => ', err);\n      }\n    };\n\n    this.register = async e => {\n      e.preventDefault();\n      const url = baseUrl + '/user/register';\n\n      try {\n        const response = await fetch(url, {\n          method: 'POST',\n          body: JSON.stringify({\n            username: e.target.username.value,\n            password: e.target.password.value,\n            email: e.target.email.value\n          }),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n\n        if (response.status === 200) {\n          this.getPosts();\n        }\n      } catch (err) {\n        console.log('Error => ', err);\n      }\n    };\n\n    this.deletePost = id => {\n      fetch(baseUrl + `/` + id, {\n        method: 'DELETE' // credentials: \"include\"\n\n      }).then(res => {\n        const findIndex = this.state.posts.findIndex(post => post[\"id\"] === id);\n        console.log(findIndex);\n        const copyPosts = [...this.state.posts];\n        copyPosts.splice(findIndex, 1);\n        this.setState({\n          posts: copyPosts\n        });\n      });\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const url = baseUrl + '/' + this.state.postToBeEdited[\"id\"];\n\n      try {\n        const response = await fetch(url, {\n          method: 'PUT',\n          body: JSON.stringify({\n            text: e.target.text.value\n          }),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n\n        if (response.status === 200) {\n          const updatedPost = await response.json();\n          const findIndex = this.state.posts.findIndex(post => post[\"id\"] === updatedPost[\"id\"]);\n          const copyPosts = [...this.state.posts];\n          copyPosts[findIndex] = updatedPost;\n          this.setState({\n            posts: copyPosts,\n            modalOpen: false\n          });\n        }\n      } catch (err) {\n        console.log('Error => ', err);\n      }\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.showEditForm = post => {\n      this.setState({\n        modalOpen: true,\n        text: post.text,\n        postToBeEdited: post\n      });\n    };\n\n    this.showLoginForm = () => {\n      this.setState({\n        userLoginOpen: true\n      });\n    };\n\n    this.closeLoginForm = () => {\n      this.setState({\n        userLoginOpen: false\n      });\n    };\n\n    this.showRegisterForm = () => {\n      this.setState({\n        userRegisterOpen: true\n      });\n    };\n\n    this.closeRegisterForm = () => {\n      this.setState({\n        userRegisterOpen: false\n      });\n    };\n\n    this.state = {\n      posts: [],\n      modalOpen: false,\n      postToBeEdited: {},\n      text: \"\",\n      user: {},\n      userLoggedIn: false,\n      userLoginOpen: false,\n      userRegisterOpen: false\n    };\n  }\n\n  componentDidMount() {\n    this.getPosts();\n    this.checkLoginStatus();\n    console.log(this.state);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \" Hello World \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"option\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"My posts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"option\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            onClick: () => {\n              this.showLoginForm();\n            },\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"option\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            onClick: () => {\n              this.showRegisterForm();\n            },\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 15\n        }, this), this.state.userLoginOpen && /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.loginUser,\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Login \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 42\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Email: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            autoComplete: \"off\",\n            type: \"text\",\n            id: \"name\",\n            name: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 81\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Password: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            autoComplete: \"off\",\n            type: \"text\",\n            id: \"password\",\n            name: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 88\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 56\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 17\n        }, this), this.state.userRegisterOpen && /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.register,\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Register \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 45\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Username: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            autoComplete: \"off\",\n            type: \"text\",\n            id: \"name\",\n            name: \"username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 86\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Password: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            autoComplete: \"off\",\n            type: \"text\",\n            id: \"password\",\n            name: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 90\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Email: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            autoComplete: \"off\",\n            type: \"text\",\n            id: \"email\",\n            name: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 84\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"signup\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 59\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 17\n        }, this), this.state.modalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: this.handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Text: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              autoComplete: \"off\",\n              name: \"text\",\n              type: \"text\",\n              value: this.state.text,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feed\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \" Home \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(NewForm, {\n          baseUrl: baseUrl,\n          createPost: this.createPost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }, this), this.state.posts.map((post, i) => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"postFeed\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"body\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"header\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text\",\n                    children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                      children: post.user[\"username\"]\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 279,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 278,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"Description\",\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: post.text\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 284,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 283,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"footer\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    children: \"Comment\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 288,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    children: \"Like\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 289,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => {\n                      this.showEditForm(post);\n                    },\n                    children: \"Edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 290,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => {\n                      this.deletePost(post[\"id\"]);\n                    },\n                    className: \"delete\",\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 291,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 21\n              }, this)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 21\n            }, this)\n          }, void 0, false);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/boris/sei-bromeliad/projects/project4/Project-4-Frontend/src/App.js"],"names":["React","Component","NewForm","axios","baseUrl","App","constructor","props","checkLoginStatus","fetch","credentials","then","res","console","log","status","json","logI","body","setState","user","userLoggedIn","catch","error","getPosts","data","posts","createPost","newPost","copyPosts","state","push","loginUser","e","preventDefault","url","loginBody","email","target","value","password","response","method","JSON","stringify","headers","err","register","username","deletePost","id","findIndex","post","splice","handleSubmit","postToBeEdited","text","updatedPost","modalOpen","handleChange","name","showEditForm","showLoginForm","userLoginOpen","closeLoginForm","showRegisterForm","userRegisterOpen","closeRegisterForm","componentDidMount","render","map","i"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, { Component } from 'react'\nimport NewForm from './NewForm'\nimport axios from 'axios'\n\nlet baseUrl = \"http://localhost:8000\"\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n\n    this.state = {\n      posts:[],\n      modalOpen: false,\n      postToBeEdited:{},\n      text:\"\",\n      user:{},\n      userLoggedIn: false,\n      userLoginOpen:false,\n      userRegisterOpen:false \n    }\n  }\n\n  checkLoginStatus = () => {\n    fetch(baseUrl+\"/user/logged_is_user\", {\n      credentials:\"include\"\n    })\n    .then(res => {\n      console.log(res)\n      if (res.status === 200){\n        res.json()\n        console.logI\n        .then(body => {\n          this.setState({\n            user:body.user,\n            userLoggedIn: true\n          })\n        })\n      }\n  })\n  .catch(error => {\n    console.log(\"check login error\", error)\n  })\n  }\n\n  getPosts = () => {\n    fetch(baseUrl + \"/\",{\n      // credentials:\"include\"\n    })\n    .then(res => {\n      if(res.status === 200){\n        return res.json()\n      } else {\n        return []\n      }\n    }).then(data => {\n      console.log(data)\n      this.setState({posts:data[\"data\"]})\n    })\n  }\n\n  createPost = (newPost) => {\n    const copyPosts = [...this.state.posts]\n    copyPosts.push(newPost)\n    this.setState({\n      posts:copyPosts\n    })\n  }\n\n  loginUser = async (e) => {\n    e.preventDefault()\n    const url = baseUrl + '/user/login'\n    const loginBody = {\n      email: e.target.email.value,\n      password: e.target.password.value\n    }\n    console.log(loginBody)\n    try {\n\n      const response = await fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(loginBody),\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: \"include\"\n      })\n\n      console.log(response)\n      console.log(\"BODY: \",response.body)\n\n      if (response.status === 200) {\n        this.getPosts()\n      }\n    }\n    catch (err) {\n      console.log('Error => ', err);\n    }\n  }\n\n  register = async (e) => {\n    e.preventDefault()\n    const url = baseUrl + '/user/register'\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        body: JSON.stringify({\n          username: e.target.username.value,\n          password: e.target.password.value,\n          email: e.target.email.value\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n      if (response.status === 200) {\n        this.getPosts()\n        \n      }\n    }\n    catch (err) {\n      console.log('Error => ', err);\n    }\n  }\n\n  deletePost = (id) => {\n    fetch(baseUrl + `/` + id, {\n    method: 'DELETE',\n    // credentials: \"include\"\n  }).then( res => {\n    const findIndex = this.state.posts.findIndex(post => post[\"id\"] === id)\n    console.log(findIndex)\n    const copyPosts = [...this.state.posts]\n    copyPosts.splice(findIndex, 1)\n    this.setState({\n      posts: copyPosts\n    })\n  })\n  }\n\n  handleSubmit = async (e) => {\n    e.preventDefault()\n    const url = baseUrl + '/' + this.state.postToBeEdited[\"id\"]\n    try{\n      const response = await fetch( url , {\n        method: 'PUT',\n        body: JSON.stringify({\n          text: e.target.text.value\n        }),\n        headers: {\n          'Content-Type' : 'application/json'\n        }\n      })\n\n      if (response.status === 200){\n        const updatedPost = await response.json()\n        const findIndex = this.state.posts.findIndex(post => post[\"id\"] === updatedPost[\"id\"])\n        const copyPosts = [...this.state.posts]\n        copyPosts[findIndex] = updatedPost\n        this.setState({\n          posts: copyPosts,\n          modalOpen:false\n        })\n      }\n    }\n    catch(err){\n      console.log('Error => ', err);\n    }\n  }\n\n  handleChange = (e)=>{\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  showEditForm = (post)=>{\n    this.setState({\n      modalOpen:true,\n      text: post.text,\n      postToBeEdited:post\n    })\n  }\n\n  componentDidMount() {\n    this.getPosts()\n    this.checkLoginStatus()\n    console.log(this.state)\n  }\n\n  showLoginForm = () => {\n    this.setState({\n      userLoginOpen:true\n    })\n  }\n\n  closeLoginForm = () => {\n    this.setState({\n      userLoginOpen:false\n    })\n  }\n\n  showRegisterForm = () => {\n    this.setState({\n      userRegisterOpen:true\n    })\n  }\n\n  closeRegisterForm = () => {\n    this.setState({\n      userRegisterOpen:false\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n          <div className=\"sidebar\">\n              <h2> Hello World </h2>\n              <div className=\"option\">\n                <h3>My posts</h3>\n              </div>\n              <div className=\"option\">\n                <h3 onClick={() => { this.showLoginForm()}}>Login</h3>\n              </div>\n              <div className=\"option\">\n                <h3 onClick={() => { this.showRegisterForm()}}>Register</h3>\n              </div>\n              {\n                this.state.userLoginOpen &&\n\n                <form onSubmit={this.loginUser}>\n                  <strong>Login </strong><br/>\n                  <label htmlFor=\"name\">Email: </label>\n                  <input autoComplete=\"off\" type=\"text\" id=\"name\" name=\"email\"/><br/>\n                  <label htmlFor=\"name\">Password: </label>\n                  <input autoComplete=\"off\" type=\"text\" id=\"password\" name=\"password\"/><br/>\n                  <input type=\"submit\" value=\"login\" /><br/>\n                </form>\n\n              }\n\n              {\n                this.state.userRegisterOpen &&\n                <form onSubmit={this.register}>\n                  <strong>Register </strong><br/>\n                    <label htmlFor=\"name\">Username: </label>\n                    <input autoComplete=\"off\" type=\"text\" id=\"name\" name=\"username\"/><br/>\n                    <label htmlFor=\"name\">Password: </label>\n                    <input autoComplete=\"off\" type=\"text\" id=\"password\" name=\"password\"/><br/>\n                    <label htmlFor=\"name\">Email: </label>\n                    <input autoComplete=\"off\" type=\"text\" id=\"email\" name=\"email\"/><br/>\n                    <input type=\"submit\" value=\"signup\" /><br/>\n                 </form>\n              }\n\n              {\n                this.state.modalOpen &&\n                  <div>\n                    <form onSubmit={this.handleSubmit}>\n                      <label>Text: </label>\n                      <input autoComplete=\"off\" name=\"text\" type=\"text\"  value={this.state.text} onChange={this.handleChange}/>\n                      <button>Submit</button>\n                    </form>\n                  </div>\n              }\n          </div>\n\n\n          <div className=\"feed\">\n            <h2> Home </h2>\n            <NewForm baseUrl={baseUrl}  createPost={ this.createPost }/>\n            { this.state.posts.map((post, i) => {\n                return (\n                  <><div className=\"postFeed\" key={i}>\n                    <div className=\"body\">\n                      <div className=\"header\">\n                        <div className=\"text\">\n                          <h3>\n                            {post.user[\"username\"]}\n                          </h3>\n                        </div>\n                        <div className=\"Description\">\n                          <p>{post.text}</p>\n                        </div>\n                      </div>\n                      <div className=\"footer\">\n                        <button>Comment</button>\n                        <button>Like</button>\n                        <button onClick={() => { this.showEditForm(post); } }>Edit</button>\n                        <button onClick={() => { this.deletePost(post[\"id\"]); } }className=\"delete\">Delete</button>\n                      \n                      </div>\n                    </div>\n                  </div>\n                      </>\n                )\n              })\n            }\n            </div>\n\n      </div>\n    );\n  }\n\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}